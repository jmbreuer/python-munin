#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Based on the postgres_queries_ plugin from http://samuel.github.com/python-munin/

Plugin to monitor a Fritz!Box DSL modem parameters.
"""

import sys
sys.path.append('/export/home/jmbreuer/Developer/python-munin')

from munin.fritz import MuninFritzPlugin

class MuninFritzDSLPlugin(MuninFritzPlugin):
    # args = "--base 1000"
    vlabel = "DSL operational parameters (downstream)"
    info = "DSL operational parameters (downstream)"

    field_types = (
        ('down_dslam_max', dict(
            label = "DSLAM max (kbps)",
            info = "Maximum configured DSLAM data rate",
            type = "GAUGE",
            row = 1,
            column = 2
        )),
        ('down_dslam_min', dict(
            label = "DSLAM max (kbps)",
            info = "Minimum configured DSLAM data rate",
            type = "GAUGE",
            row = 2,
            column = 2
        )),
        ('down_linecap', dict(
            label = "Line capacity (kbps)",
            info = "Measured DSL line capacity",
            type = "GAUGE",
            row = 3,
            column = 2
        )),
        ('down_rate', dict(
            label = "Current rate (kbps)",
            info = "Trained DSL line rate",
            type = "GAUGE",
            row = 4,
            column = 2
        )),
    )

    @property
    def title(self):
        return "Fritz!Box DSL downstream parameters on %s" % self.hostname

    @property
    def fields(self):
        return [
            (k, dict(
                    label = v['label'],
                    info = v['info'],
                    type = v['type'],
                    min = "0",
                )) for k, v in self.field_types]

    def execute(self):
        table = self.gettable('adsl.html')
        keys = [(k, v['row'], v['column']) for k, v in self.field_types]
        values = {}
        for k, row, column in keys:
	  values[k] = int(table[row]('td')[column].text)
	return values

if __name__ == "__main__":
    MuninFritzDSLPlugin().run()
