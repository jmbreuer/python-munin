#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Based on the postgres_queries_ plugin from http://samuel.github.com/python-munin/

Plugin to monitor IPv4 host ping latencies
"""

# Add our surrounding modules to the module path
import os, sys, inspect
# realpath() will make the path absolute and deal with symlinks
module_folder =  os.path.split(os.path.split(os.path.realpath(inspect.getfile(inspect.currentframe())))[0])[0]
if module_folder not in sys.path:
  sys.path.insert(0, module_folder)

import string
from munin.ping import MuninPingPlugin

class MuninPingprobePlugin(MuninPingPlugin):
  
    def __init__(self):
      self.hosts = string.split(os.environ.get('ping_hosts', "localhost"), " ")
      fields = [(string.replace(e, ".", "_"), dict(
                    label = e,
                    info = e,
                    type = "GAUGE",
                    min = "0"
                )) for e in self.hosts]
      self.graphs = { 
        'pingprobe_rtt': {
	  'category': self.category,
	  'fields': fields,
	  'title': "Ping RTT", 
          'vlabel': "Ping RTT",
          'info': "Ping RTT" },
	'pingprobe_loss': {
	  'category': self.category,
	  'fields': fields,
	  'title': "Ping Loss",
	  'vlabel': "Ping Loss",
	  'info': "Ping Loss" }
        }


    def execute(self):
        count = 10
        raw = {}
        for host in self.hosts:
	  p = self.getPing(host)
	  p.run(count)
	  raw[host] = {'pingprobe_rtt': p.stat_avg(), 'pingprobe_loss': count - p.stat_rcvd()}

        values = {}
        for gn in self.graphs:
	    gv = {}
            for host in self.hosts:
	      gv[(string.replace(host, ".", "_"))] = raw[host][gn]
	    values[gn] = gv
	return values

if __name__ == "__main__":
    MuninPingprobePlugin().run()
